{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","services/imagesServices.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","API_KEY","BASE_URL","a","imageName","currentPage","searchQuery","fetch","response","json","data","hits","api","fetchImagesAPI","Searchbar","state","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","warn","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","autoComplete","autoFocus","placeholder","Component","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","console","log","window","addEventListener","removeEventListener","src","alt","createPortal","Overlay","onClick","ModalImg","ImageGalleryItem","showModal","toggleModal","largeImageUrl","ImageGalleryItemImage","ImageGallery","images","map","image","webformatURL","largeImageURL","tags","id","Button","fetchImages","Spinner","loader","color","height","width","timeout","App","isLoading","error","onChangeQuery","options","imagesServices","then","prevState","scrollTo","top","documentElement","scrollHeight","behavior","catch","finally","prevProps","shouldRenderLoadMoreButton","length","message","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5e81497a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1FAim\",\"ModalImg\":\"Modal_ModalImg__3tqPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2YZBw\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1bQAo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2YeDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2lXoy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2NZQg\"};","const API_KEY = '19141358-bb46b5eb9dddc73023fff1d28';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\nasync function fetchImagesAPI({ imageName, currentPage }) {\r\n  const searchQuery = `?q=${imageName}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${searchQuery}`);\r\n    const data = await response.json();\r\n    return data.hits;\r\n  } catch (error) {\r\n    return error('Some error in fetch');\r\n  }\r\n}\r\n\r\nconst api = {\r\n  fetchImagesAPI,\r\n};\r\n\r\nexport default api;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n  state = { imageName: '' };\r\n\r\n //получение значения input\r\n  handleChange = e => {\r\n    this.setState({ imageName: e.currentTarget.value.toLowerCase() });\r\n  };\r\n//отправка значения из формы\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.imageName.trim() === '') {\r\n      toast.warn('Введите значение для поиска');\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.imageName);\r\n\r\n    this.setState({ imageName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.imageName}\r\n            onChange={this.handleChange}\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from '../Modal/Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Modal componentWillUnmount');\r\n\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>\r\n          <img className={s.ModalImg} src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\nimport Modal from '../Modal';\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  state = {\r\n    showModal: false,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { src, alt, largeImageUrl } = this.props;\r\n    const { showModal } = this.state;\r\n\r\n    return (\r\n      <li className={s.ImageGalleryItem}>\r\n        <img\r\n          onClick={this.toggleModal}\r\n          src={src}\r\n          alt={alt}\r\n          className={s.ImageGalleryItemImage}\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n\r\n  static propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n  };\r\n}","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nexport default function ImageGallery({ images }) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          src={image.webformatURL}\r\n          largeImageUrl={image.largeImageURL}\r\n          alt={image.tags}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nclass Button extends Component {\r\n  static propTypes = { fetchImages: PropTypes.func.isRequired };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.props.fetchImages} className={s.Button}>\r\n        Загрузить еще\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nexport default class Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className={s.loader}\r\n        type=\"Bars\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n     \r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport imagesServices from './services/imagesServices';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\n\nclass App extends Component {\n  state = {\n    imageName: '',\n    images: [],\n    currentPage: 1,\n    isLoading: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.imageName !== this.state.imageName) {\n      this.fetchImages();\n    }\n  }\n\n  onChangeQuery = imageName => {\n    this.setState({\n      imageName,\n      currentPage: 1,\n      images: [],\n      error: null,\n    });\n  };\n\n  fetchImages = () => {\n    const { imageName, currentPage } = this.state;\n    const options = { imageName, currentPage };\n\n    this.setState({ isLoading: true });\n\n    imagesServices\n      .fetchImagesAPI(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  render() {\n    const { images, isLoading, error } = this.state;\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\n\n    return (\n      <>\n        {error && <p>Whoops, something went wrong: {error.message}</p>}\n\n        <Searchbar onSubmit={this.onChangeQuery} />\n\n        <ImageGallery images={this.state.images} />\n\n        {isLoading && <Loader />}\n\n        {shouldRenderLoadMoreButton && (\n          <Button fetchImages={this.fetchImages} />\n        )}\n\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2ZOPQ\",\"SearchForm\":\"Searchbar_SearchForm__1Q6rR\",\"SearchFormButton\":\"Searchbar_SearchFormButton__tsds3\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__6yCES\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1raqo\"};"],"sourceRoot":""}